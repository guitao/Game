<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" width="1000" height="600" backgroundColor="#0" creationComplete="creationComplete(event)">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.yo.manager.InputManager;
			
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			
			import iso.DrawnIsoBox;
			import iso.DrawnIsoTile;
			import iso.IsoWorld;
			import iso.Point3D;
			
			import utils.IsoUtils;
			
			private var _container:UIComponent;
			
			private var _world:IsoWorld;
			
			private function creationComplete(e:FlexEvent):void
			{
				if(stage){
					init();
				}else{
					this.addEventListener(Event.ADDED_TO_STAGE, __addedToStage);
				}
			}
			
			private function __addedToStage(e:Event):void
			{
				this.removeEventListener(Event.ADDED_TO_STAGE, __addedToStage);
				
				init();
			}
			
			private function init():void{
				initManager();
				initEvent();
				initView();
			}
			
			private function initEvent():void
			{
				this.addEventListener(Event.ENTER_FRAME, __enterFrame);
			}
			
			private function initView():void
			{
				_container = new UIComponent();
				this.addElement(_container);
				
				worldTest();
			}
			
			private function worldTest():void{
				_world = new IsoWorld(20, 20);
				centerWorld();
				
				_container.addChild(_world);
				
				for (var i:int = 0; i < _world.cols; i++) 
				{
					for (var j:int = 0; j < _world.rows; j++) 
					{
						var tile:DrawnIsoTile = new DrawnIsoTile(_world.cellSize, 0xFFFFFF);
						tile.position = new Point3D(i * _world.cellSize, 0, j * _world.cellSize);
						_world.addChildToFloor(tile);
					}
					
				}
				
//				stage.addEventListener(MouseEvent.CLICK, __worldClick);
				stage.addEventListener(Event.RESIZE, __resizeHandler);
			}
			
			private function __resizeHandler(e:Event):void{           
				centerWorld();     
			}
			         
			private function __worldClick(event:MouseEvent):void
			{
				var box:DrawnIsoBox = new DrawnIsoBox(_world.cellSize, Math.random() * 0xffffff, _world.cellSize);
				var pos:Point3D = IsoUtils.screenToIso(new Point(_world.mouseX, _world.mouseY));
				pos.x = Math.round(pos.x / _world.cellSize) * _world.cellSize;
				pos.y = Math.round(pos.y / _world.cellSize) * _world.cellSize;
				pos.z = Math.round(pos.z / _world.cellSize) * _world.cellSize;
				box.position = pos;
				_world.addChildToWorld(box);
			}
			
			private function centerWorld():void
			{
				_world.x = stage.stageWidth / 2; 
				_world.y = stage.stageHeight / 2;
			}
			
			private function __enterFrame(e:Event):void
			{
				//可以拖动
				if(InputManager.instance.keyDown(Keyboard.SPACE)){
					Mouse.cursor = MouseCursor.HAND;
					
					if(InputManager.instance.mouseDown()){
						_world.startDrag();
					}else{
						_world.stopDrag();
					}
				}else{
					Mouse.cursor = MouseCursor.AUTO;
					_world.stopDrag();
				}
				
				if(InputManager.instance.mouseWheel){
					var delta:int = InputManager.instance.mouseWheelDelta;
					if(delta > 0){
						//上,放大
						_world.scaleX *= 1.2;
						_world.scaleY *= 1.2;
					}else if(delta < 0){
						//下,缩小
						_world.scaleX /= 1.2;
						_world.scaleY /= 1.2;
					}
				}
				
				if(InputManager.instance.keyDown(Keyboard.ESCAPE)){
					//esc还原
					centerWorld();
					_world.scaleX = 1;
					_world.scaleY = 1;
				}
			}
			
			private function initManager():void
			{
				InputManager.instance.setup(stage);
			}
			
		]]>
	</fx:Script>
</s:Application>
