package com.sina.finance.ui
{
    import com.evts.*;
    import flash.display.*;
    import flash.events.*;
    import flash.geom.*;
    import flash.text.*;

    public class CompareButton extends Sprite
    {
        private var _color:uint;
        private var _colorBlock:Shape;
        private var _name:String;
        private var _symbol:String;
        private var _nameText:TextField;

        public function CompareButton(param1:String, param2:String, param3:uint, param4:Boolean)
        {
            this._name = param1;
            this._symbol = param2;
            this._color = param3;
            this._nameText = new TextField();
            this._nameText.autoSize = "left";
            this._nameText.selectable = false;
            this._nameText.defaultTextFormat = new TextFormat("arial", 12, param3, true);
            this._nameText.text = param1;
            this._nameText.x = 20;
            addChild(this._nameText);
            this._colorBlock = new Shape();
            this._colorBlock.y = 5;
            this._colorBlock.graphics.beginFill(this._color);
            this._colorBlock.graphics.drawRect(0, 0, 18, 10);
            this._colorBlock.graphics.endFill();
            addChild(this._colorBlock);
            if (param4)
            {
                this.addEventListener(MouseEvent.MOUSE_OVER, this.onMsOver);
                this.addEventListener(MouseEvent.MOUSE_OUT, this.onMsOut);
                this.addEventListener(MouseEvent.CLICK, this.onMsClick);
            }
            return;
        }// end function

        private function onMsClick(event:MouseEvent) : void
        {
            dispatchEvent(new DeleteCompareEvent(this._symbol));
            return;
        }// end function

        public function setNameSymbolColor(param1:String, param2:String, param3:uint) : void
        {
            this._name = param1;
            this._symbol = param2;
            this._color = param3;
            this._nameText.text = param1;
            this._nameText.textColor = param3;
            this.onMsOver(null);
            return;
        }// end function

        private function onMsOut(event:MouseEvent = null) : void
        {
            this._colorBlock.graphics.beginFill(this._color);
            this._colorBlock.graphics.drawRect(0, 0, 18, 10);
            this._colorBlock.graphics.endFill();
            this.buttonMode = false;
            this._colorBlock.graphics.lineStyle(1, 15921906, 1);
            this._colorBlock.graphics.moveTo(5.5, 3);
            this._colorBlock.graphics.lineTo(12.5, 7);
            this._colorBlock.graphics.moveTo(5.5, 7);
            this._colorBlock.graphics.lineTo(12.5, 3);
            return;
        }// end function

        public function removeAllEventListener() : void
        {
            this.removeEventListener(MouseEvent.MOUSE_OVER, this.onMsOver);
            this.removeEventListener(MouseEvent.MOUSE_OUT, this.onMsOut);
            this.removeEventListener(MouseEvent.CLICK, this.onMsClick);
            return;
        }// end function

        private function onMsOver(event:MouseEvent = null) : void
        {
            var _loc_2:Matrix = null;
            this._colorBlock.graphics.clear();
            if (event)
            {
                _loc_2 = new Matrix();
                _loc_2.createGradientBox(width, height, Math.PI / 2);
                this._colorBlock.graphics.beginGradientFill("linear", [this._color, this._color], [0.8, 1], [0, 255], _loc_2);
                this._colorBlock.graphics.drawRect(0, 0, 18, 10);
                this._colorBlock.graphics.endFill();
                this._colorBlock.graphics.lineStyle(1, 16777215, 1);
                this._colorBlock.graphics.moveTo(0, 0);
                this._colorBlock.graphics.lineTo(18, 10);
                this._colorBlock.graphics.moveTo(0, 10);
                this._colorBlock.graphics.lineTo(18, 0);
                this.buttonMode = true;
            }
            else
            {
                this.onMsOut(null);
            }
            return;
        }// end function

    }
}
