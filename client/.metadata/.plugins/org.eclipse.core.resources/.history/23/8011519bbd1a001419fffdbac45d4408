package com.ui
{
    import flash.display.*;
    import flash.events.*;
    import flash.net.*;
    import flash.text.*;
    import flash.utils.*;
    import hsuan.*;

    public class SetUiBase extends Sprite
    {
        protected var _opArr:Array;
        protected var _panel:Sprite;
        protected const _BORDER_COLOR:uint = 13361904;
        private var _tid:uint;
        protected var _so:SharedObject;
        private var _centerFf:TextFormat;
        protected var _tip:TextField;
        protected var _cfg:Config;
        private var _f:TextFormat;
        private var _notice:TextField;

        public function SetUiBase()
        {
            this._cfg = Config.getInstance();
            this._panel = new Sprite();
            this._opArr = [];
            this._f = new TextFormat("arial", 12);
            this._centerFf = new TextFormat("arial", 12, this._cfg.LB_COLOR, null, null, null, null, null, "center");
            try
            {
                this._so = SharedObject.getLocal(this._cfg.LOCAL_STORAGE, this._cfg.LOCAL_PATH);
            }
            catch (err:Error)
            {
            }
            addChild(this._panel);
            return;
        }// end function

        protected function toSave() : void
        {
            return;
        }// end function

        protected function newTxtField(param1:String = null, param2:uint = 7804, param3:Boolean = false, param4:uint = 0) : TextField
        {
            var _loc_5:* = new TextField();
            new TextField().defaultTextFormat = this._f;
            _loc_5.textColor = param2;
            if (param3)
            {
                _loc_5.type = "input";
                _loc_5.restrict = "0-9";
                _loc_5.height = 20;
                _loc_5.width = param4;
                _loc_5.border = true;
                _loc_5.borderColor = this._BORDER_COLOR;
                _loc_5.background = true;
                _loc_5.backgroundColor = 16777215;
            }
            else
            {
                if (param4 > 0)
                {
                    _loc_5.width = param4;
                    _loc_5.height = 20;
                    _loc_5.defaultTextFormat = this._centerFf;
                }
                else
                {
                    _loc_5.autoSize = "left";
                }
                _loc_5.mouseEnabled = false;
            }
            if (param1)
            {
                _loc_5.text = param1;
            }
            return _loc_5;
        }// end function

        protected function showNotice(param1:int = 120) : void
        {
            clearTimeout(this._tid);
            if (!this._notice)
            {
                this._notice = this.newTxtField("设置成功！", 11141120);
                this._notice.x = 122;
                this._notice.y = param1;
                addChild(this._notice);
            }
            this._notice.visible = true;
            this._tid = setTimeout(this.hideNotice, 2000);
            return;
        }// end function

        private function hideNotice() : void
        {
            if (this._notice)
            {
                this._notice.visible = false;
            }
            return;
        }// end function

        private function onSelect(event:MouseEvent) : void
        {
            var _loc_2:SingleOption = null;
            for each (_loc_2 in this._opArr)
            {
                
                _loc_2.change(false);
            }
            _loc_2 = SingleOption(event.currentTarget);
            _loc_2.change(true);
            this.toSave();
            return;
        }// end function

        protected function addOption(param1:String, param2:Boolean = false) : void
        {
            var op:SingleOption;
            var caption:* = param1;
            var selected:* = param2;
            var posY:* = this._opArr.length * 30;
            op = new SingleOption(caption, selected);
            op.addEventListener(MouseEvent.CLICK, this.onSelect);
            op.addEventListener(MouseEvent.MOUSE_OVER, function (event:MouseEvent) : void
            {
                op.alpha = 0.8;
                return;
            }// end function
            );
            op.addEventListener(MouseEvent.MOUSE_OUT, function (event:MouseEvent) : void
            {
                op.alpha = 1;
                return;
            }// end function
            );
            op.y = posY;
            this._panel.addChild(op);
            this._opArr[this._opArr.length] = op;
            return;
        }// end function

    }
}
