package stock.com.ui.elements.xpainting.icon
{
    import com.image.paintTool.*;
    import flash.display.*;
    import flash.events.*;
    import stock.com.events.*;
    import stock.com.ui.elements.xpainting.*;
    import stock.com.ui.elements.xpainting.note.*;

    public class IconBase extends Sprite
    {
        private const NOTEOFFSET:Number = 1;
        private const ICONSIZE:Number = 20;
        private var mouseOverBox:MouseOverBox;
        private var _type:String;
        private var _sprite:Sprite;
        private var _mainCfg:Config;
        private var selectedBox:SelectedBox;
        private var note:IconNote;
        private var _selected:Boolean;
        public static const GOLDENCUTLINES:String = "goldencutlines";
        public static const SEGMENTLINE:String = "segmentline";
        public static const BANDLINES:String = "bandlines";
        public static const RECTANGLE:String = "rectangle";
        public static const CURSOR:String = "cursor";
        public static const PICTURESHOT:String = "pictureshot";
        public static const FIBONACCILINES:String = "fibonaccilines";
        public static const PERCENTLINES:String = "percentlines";
        public static const REMOVELINES:String = "removelines";
        public static const UPMARK:String = "upmark";
        public static const STRAIGHTLINE:String = "straightlines";
        public static const DOWNMARK:String = "downmark";
        public static const PARALLELLINES:String = "parallellines";
        public static const TEXTCOMMENT:String = "textcomment";
        public static const PERIODLINES:String = "periodlines";

        public function IconBase(param1:String)
        {
            this._mainCfg = Config.getInstance();
            this.init(param1);
            return;
        }// end function

        private function onMouseOver(event:MouseEvent) : void
        {
            super.addChild(this.note);
            if (parent)
            {
                super.parent.setChildIndex(this, (super.parent.numChildren - 1));
            }
            if (!this._selected && !(this.parent.stage.displayState != "normal" && (event.target as IconBase)._type == IconBase.TEXTCOMMENT))
            {
                super.addChild(this.mouseOverBox);
            }
            return;
        }// end function

        private function init(param1:String) : void
        {
            super.graphics.drawRect(0, 0, this.ICONSIZE, this.ICONSIZE);
            super.buttonMode = true;
            super.useHandCursor = true;
            this._type = param1;
            this._sprite = this.getIcon(param1);
            this._sprite.x = this.ICONSIZE / 2;
            this._sprite.y = this.ICONSIZE / 2;
            super.addChild(this._sprite);
            this.mouseOverBox = new MouseOverBox();
            this.selectedBox = new SelectedBox();
            this.note = new IconNote(this.getNote(param1));
            this.note.x = this.ICONSIZE + this.NOTEOFFSET;
            this.note.y = this.ICONSIZE + this.NOTEOFFSET;
            super.mouseChildren = false;
            super.addEventListener(MouseEvent.MOUSE_OVER, this.onMouseOver);
            super.addEventListener(MouseEvent.MOUSE_OUT, this.onMouseOut);
            super.addEventListener(MouseEvent.CLICK, this.onMouseClick);
            return;
        }// end function

        public function get type() : String
        {
            return this._type;
        }// end function

        private function onMouseClick(event:MouseEvent) : void
        {
            var _loc_2:String = null;
            if (!this._selected)
            {
                switch(this._type)
                {
                    case IconBase.CURSOR:
                    {
                        _loc_2 = "1";
                        break;
                    }
                    case IconBase.SEGMENTLINE:
                    {
                        _loc_2 = "2";
                        break;
                    }
                    case IconBase.STRAIGHTLINE:
                    {
                        _loc_2 = "3";
                        break;
                    }
                    case IconBase.PARALLELLINES:
                    {
                        _loc_2 = "4";
                        break;
                    }
                    case IconBase.RECTANGLE:
                    {
                        _loc_2 = "5";
                        break;
                    }
                    case IconBase.PERIODLINES:
                    {
                        _loc_2 = "6";
                        break;
                    }
                    case IconBase.FIBONACCILINES:
                    {
                        _loc_2 = "7";
                        break;
                    }
                    case IconBase.UPMARK:
                    {
                        _loc_2 = "8";
                        break;
                    }
                    case IconBase.DOWNMARK:
                    {
                        _loc_2 = "9";
                        break;
                    }
                    case IconBase.GOLDENCUTLINES:
                    {
                        _loc_2 = "10";
                        break;
                    }
                    case IconBase.PERCENTLINES:
                    {
                        _loc_2 = "11";
                        break;
                    }
                    case IconBase.BANDLINES:
                    {
                        _loc_2 = "12";
                        break;
                    }
                    case IconBase.TEXTCOMMENT:
                    {
                        _loc_2 = "13";
                        break;
                    }
                    case IconBase.PICTURESHOT:
                    {
                        _loc_2 = "14";
                        break;
                    }
                    case IconBase.REMOVELINES:
                    {
                        _loc_2 = "15";
                        break;
                    }
                    default:
                    {
                        break;
                    }
                }
                if (_loc_2)
                {
                    this._mainCfg.sendStatistic("draw.html?type=" + _loc_2);
                }
            }
            this.selected = true;
            event.stopPropagation();
            return;
        }// end function

        private function onMouseOut(event:MouseEvent) : void
        {
            if (!this._selected)
            {
                if (Boolean(this.mouseOverBox.parent))
                {
                    super.removeChild(this.mouseOverBox);
                }
            }
            return;
        }// end function

        private function getNote(param1:String) : String
        {
            switch(param1)
            {
                case CURSOR:
                {
                    return "选择工具";
                }
                case SEGMENTLINE:
                {
                    return "线段";
                }
                case STRAIGHTLINE:
                {
                    return "直线";
                }
                case PARALLELLINES:
                {
                    return "平行直线";
                }
                case RECTANGLE:
                {
                    return "矩形";
                }
                case PERIODLINES:
                {
                    return "周期线";
                }
                case FIBONACCILINES:
                {
                    return "斐波那契线";
                }
                case UPMARK:
                {
                    return "涨标记";
                }
                case DOWNMARK:
                {
                    return "跌标记";
                }
                case GOLDENCUTLINES:
                {
                    return "黄金分割";
                }
                case PERCENTLINES:
                {
                    return "百分比线";
                }
                case BANDLINES:
                {
                    return "波段线";
                }
                case TEXTCOMMENT:
                {
                    return "文字注释";
                }
                case PICTURESHOT:
                {
                    return "截图";
                }
                case REMOVELINES:
                {
                    return "撤销";
                }
                default:
                {
                    return "";
                    break;
                }
            }
        }// end function

        public function set selected(param1:Boolean) : void
        {
            var _loc_2:XPaintingEvent = null;
            this._selected = param1;
            if (param1)
            {
                super.addChild(this.selectedBox);
            }
            else
            {
            }
            super.graphics.clear();
            if (param1)
            {
                super.graphics.beginFill(16777215);
            }
            else
            {
                super.graphics.beginFill(16777215, 0);
            }
            super.graphics.drawRect(0, 0, this.ICONSIZE, this.ICONSIZE);
            super.graphics.endFill();
            if (param1)
            {
                _loc_2 = new XPaintingEvent(XPaintingEvent.ICONSELECTED, true);
                _loc_2.icon = this;
                super.dispatchEvent(_loc_2);
            }
            return;
        }// end function

        private function getIcon(param1:String) : Sprite
        {
            switch(param1)
            {
                case CURSOR:
                {
                    return new CursorIcon();
                }
                case SEGMENTLINE:
                {
                    return new SegmentLineIcon();
                }
                case STRAIGHTLINE:
                {
                    return new StraightLineIcon();
                }
                case PARALLELLINES:
                {
                    return new ParallelLineIcon();
                }
                case RECTANGLE:
                {
                    return new RectangleIcon();
                }
                case PERIODLINES:
                {
                    return new PeriodicLinesIcon();
                }
                case FIBONACCILINES:
                {
                    return new FibonacciLinesIcon();
                }
                case UPMARK:
                {
                    if (Xpainting.area == Xpainting.CNASTOCK)
                    {
                        return new RedUpMarkIcon();
                    }
                    return new YellowUpMarkIcon();
                }
                case DOWNMARK:
                {
                    if (Xpainting.area == Xpainting.CNASTOCK)
                    {
                        return new YellowDownMarkIcon();
                    }
                    return new RedDownMarkIcon();
                }
                case GOLDENCUTLINES:
                {
                    return new GoldenCutLinesIcon();
                }
                case PERCENTLINES:
                {
                    return new PercentLinesIcon();
                }
                case BANDLINES:
                {
                    return new BandLinesIcon();
                }
                case TEXTCOMMENT:
                {
                    return new TextCommentIcon();
                }
                case PICTURESHOT:
                {
                    return new PictureShotIcon();
                }
                case REMOVELINES:
                {
                    return new DeleteLinesIcon();
                }
                default:
                {
                    return new Sprite();
                    break;
                }
            }
        }// end function

    }
}
