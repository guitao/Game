package com.ui
{
    import com.greensock.*;
    import com.sina.finance.data.*;
    import flash.display.*;
    import flash.events.*;
    import flash.text.*;
    import flash.utils.*;
    import hsuan.*;

    public class NewsModule extends Sprite
    {
        private var _newsMoveInterval:uint;
        private const _TF:TextFormat;
        private var _finNewsRetryTime:uint = 0;
        private const _TITLE_SPEED:uint = 5000;
        private var _cfg:Config;
        private var _foreContainer:Sprite;
        private const _MARQUEE_SPEED:uint = 20;
        private var _marqueeLayer:Sprite;
        private const _CTF:TextFormat;
        private var _symbol:String;
        private const _MARQUEE_GAP:uint = 70;
        private var _titleRetryTime:uint = 0;
        private var _titleInterval:uint;
        private var _dataTool:DataTool;
        private var _titleArr:Array;
        private var _newsArr:Array;
        private const _TITLE_W:uint = 150;
        private const _RELOAD_SPEED:uint = 1.2e+006;
        private var _marqueeNewsMask:Shape;
        private var _newsContainer:Sprite;
        private var _marqueeBorder:int;
        private var _curStockNewsReady:Boolean;
        private var _lastT:TextField;

        public function NewsModule(param1:String)
        {
            this._dataTool = DataTool.getInstance();
            this._cfg = Config.getInstance();
            this._TF = new TextFormat("arial", 12, this._cfg.LB_COLOR);
            this._CTF = new TextFormat("arial", 12, this._cfg.cfontRise, null, null, null, null, null, "center");
            this._symbol = param1;
            if (stage)
            {
                this.init();
            }
            else
            {
                addEventListener(Event.ADDED_TO_STAGE, this.init);
            }
            return;
        }// end function

        private function onFinNewsIoErr(event:IOErrorEvent) : void
        {
            event.target.removeEventListener(IOErrorEvent.IO_ERROR, this.onFinNewsIoErr);
            event.target.removeEventListener(Event.COMPLETE, this.onFinNewsLoaded);
            var _loc_2:String = this;
            _loc_2._finNewsRetryTime = this._finNewsRetryTime + 1;
            if (++this._finNewsRetryTime < 3)
            {
                this.loadFinanceNews();
            }
            else if (this._curStockNewsReady)
            {
                this.moveMarquee();
            }
            return;
        }// end function

        private function onFinNewsLoaded(event:Event) : void
        {
            var obj:Object;
            var arr:Array;
            var t:TextField;
            var e:* = event;
            e.target.removeEventListener(Event.COMPLETE, this.onFinNewsLoaded);
            e.target.removeEventListener(IOErrorEvent.IO_ERROR, this.onFinNewsIoErr);
            var ba:* = new ByteArray();
            ba.writeBytes(e.target.data);
            ba.position = 0;
            var str:* = ba.readMultiByte(ba.length, "utf-8");
            str = this._dataTool.fixJsonStr(str, "{", "}");
            try
            {
                obj = Json.decode(str);
            }
            catch (err:Error)
            {
                if (++_finNewsRetryTime < 3)
                {
                    loadFinanceNews();
                }
                else if (_curStockNewsReady)
                {
                    moveMarquee();
                }
                return;
            }
            this._finNewsRetryTime = 0;
            if (!obj || !obj.result || !obj.result.data || obj.result.data.length == 0)
            {
                arr;
            }
            else
            {
                arr = obj.result.data;
            }
            var len:* = arr.length;
            var i:uint;
            while (i < len)
            {
                
                t = this.newT("<a href=\'" + this._cfg.getStatUrl(arr[i].url) + "\' target=\'_blank\'>" + arr[i].date + " " + arr[i].time + "  " + arr[i].title + "</a>");
                if (this._lastT)
                {
                    t.x = this._lastT.x + this._lastT.width + this._MARQUEE_GAP;
                }
                this._lastT = t;
                this._marqueeLayer.addChild(t);
                i = (i + 1);
            }
            this._marqueeBorder = -this._marqueeLayer.width;
            this.moveMarquee();
            return;
        }// end function

        private function loadFinanceNews() : void
        {
            this._dataTool.loadDataFromUrl(this._cfg.FINANCENEWS_URL.replace("$r", Math.random()), this.onFinNewsLoaded, null, this.onFinNewsIoErr, null, true);
            return;
        }// end function

        private function reloadNews() : void
        {
            clearInterval(this._newsMoveInterval);
            this._marqueeLayer.x = this._cfg.viewW - this._TITLE_W;
            while (this._marqueeLayer.numChildren)
            {
                
                this._marqueeLayer.removeChildAt(0);
            }
            this._lastT = null;
            this.loadNewsData();
            return;
        }// end function

        private function initTitleBg() : void
        {
            this._foreContainer = new Sprite();
            this._foreContainer.graphics.lineStyle(0, 12566463);
            this._foreContainer.graphics.moveTo(this._TITLE_W - 3, 3);
            this._foreContainer.graphics.lineTo(this._TITLE_W - 3, 17);
            var _loc_1:* = new Shape();
            _loc_1.graphics.beginFill(0);
            _loc_1.graphics.drawRect(0, 0, this._TITLE_W, 20);
            _loc_1.graphics.endFill();
            _loc_1.x = this._foreContainer.x;
            _loc_1.y = this._foreContainer.y;
            this._foreContainer.mask = _loc_1;
            addChild(_loc_1);
            addChild(this._foreContainer);
            return;
        }// end function

        private function moveMarquee() : void
        {
            this._newsMoveInterval = setInterval(function () : void
            {
                _marqueeLayer.x = _marqueeLayer.x - 2;
                if (_marqueeLayer.x < _marqueeBorder)
                {
                    _marqueeLayer.x = _cfg.viewW - _TITLE_W;
                }
                return;
            }// end function
            , this._MARQUEE_SPEED);
            return;
        }// end function

        private function onCurStockNewsErr(event:ErrorEvent) : void
        {
            event.target.removeEventListener(Event.COMPLETE, this.onCurStockNewsLoaded);
            event.target.removeEventListener(IOErrorEvent.IO_ERROR, this.onCurStockNewsErr);
            event.target.removeEventListener(SecurityErrorEvent.SECURITY_ERROR, this.onCurStockNewsErr);
            this.loadFinanceNews();
            return;
        }// end function

        private function init(event:Event = null) : void
        {
            removeEventListener(Event.ADDED_TO_STAGE, this.init);
            this.initNewsBg();
            this.initTitleBg();
            this.loadNewsData();
            this.loadTitleData();
            setInterval(this.reloadNews, this._RELOAD_SPEED);
            return;
        }// end function

        private function loadNewsData() : void
        {
            this._curStockNewsReady = false;
            if (this._cfg.stockType == "i")
            {
                this.loadFinanceNews();
            }
            else
            {
                this.loadCurStockNews();
            }
            return;
        }// end function

        private function initNewsBg() : void
        {
            this._newsContainer = new Sprite();
            this._newsContainer.x = this._TITLE_W;
            addChildAt(this._newsContainer, 0);
            this._marqueeLayer = new Sprite();
            this._marqueeLayer.addEventListener(MouseEvent.MOUSE_OVER, this.overMarqueeLayer);
            this._marqueeLayer.addEventListener(MouseEvent.MOUSE_OUT, this.outMarqueeLayer);
            this._marqueeLayer.addEventListener(MouseEvent.MOUSE_UP, this.outMarqueeLayer);
            this._marqueeLayer.x = this._cfg.viewW - this._TITLE_W;
            this._newsContainer.addChild(this._marqueeLayer);
            return;
        }// end function

        private function onTitleIoErr(event:IOErrorEvent) : void
        {
            event.target.removeEventListener(IOErrorEvent.IO_ERROR, this.onTitleIoErr);
            event.target.removeEventListener(Event.COMPLETE, this.onTitleDataLoaded);
            if (this._titleRetryTime < 3)
            {
                var _loc_2:String = this;
                var _loc_3:* = this._titleRetryTime + 1;
                _loc_2._titleRetryTime = _loc_3;
                this.loadTitleData();
            }
            return;
        }// end function

        private function loadCurStockNews() : void
        {
            var _loc_1:* = "http://news.sinajs.cn/?_=" + Math.random() + "&maxcnt=20&scnt=20&list=" + this._symbol + ",gg_" + this._symbol;
            this._dataTool.loadDataFromUrl(_loc_1, this.onCurStockNewsLoaded, null, this.onCurStockNewsErr, this.onCurStockNewsErr, true);
            return;
        }// end function

        public function resize() : void
        {
            this.initMarqueeNewsMask();
            return;
        }// end function

        private function newT(param1:String, param2:uint = 0) : TextField
        {
            var _loc_3:* = new TextField();
            if (param2 > 0)
            {
                _loc_3.defaultTextFormat = this._CTF;
                _loc_3.width = param2;
                _loc_3.height = 20;
            }
            else
            {
                _loc_3.defaultTextFormat = this._TF;
                _loc_3.autoSize = "left";
            }
            _loc_3.htmlText = param1;
            _loc_3.selectable = false;
            return _loc_3;
        }// end function

        private function outMarqueeLayer(event:MouseEvent) : void
        {
            clearInterval(this._newsMoveInterval);
            this.moveMarquee();
            return;
        }// end function

        private function overMarqueeLayer(event:MouseEvent) : void
        {
            clearInterval(this._newsMoveInterval);
            return;
        }// end function

        private function onCurStockNewsLoaded(event:Event) : void
        {
            var arr:Array;
            var t:TextField;
            var e:* = event;
            e.target.removeEventListener(Event.COMPLETE, this.onCurStockNewsLoaded);
            e.target.removeEventListener(IOErrorEvent.IO_ERROR, this.onCurStockNewsErr);
            e.target.removeEventListener(SecurityErrorEvent.SECURITY_ERROR, this.onCurStockNewsErr);
            var ba:* = new ByteArray();
            ba.writeBytes(e.target.data);
            ba.position = 0;
            var str:* = ba.readMultiByte(ba.length, "gbk");
            str = this._dataTool.fixJsonStr(str);
            try
            {
                arr = Json.decode(str);
            }
            catch (err:Error)
            {
                loadFinanceNews();
                return;
            }
            var i:uint;
            var len:* = arr.length;
            while (i < len)
            {
                
                t = this.newT("<a href=\'" + this._cfg.getStatUrl(arr[i][3]) + "\' target=\'_blank\'>" + arr[i][0] + "  " + arr[i][2] + "</a>");
                if (this._lastT)
                {
                    t.x = this._lastT.x + this._lastT.width + this._MARQUEE_GAP;
                }
                this._lastT = t;
                this._marqueeLayer.addChild(t);
                i = (i + 1);
            }
            if (len > 0)
            {
                this._marqueeBorder = -this._marqueeLayer.width;
                this._curStockNewsReady = true;
            }
            this.loadFinanceNews();
            return;
        }// end function

        private function loadTitleData() : void
        {
            this._dataTool.loadDataFromUrl(this._cfg.RECOMMEND_URL.replace("$r", Math.random()), this.onTitleDataLoaded, null, this.onTitleIoErr, null, true);
            return;
        }// end function

        private function onTitleDataLoaded(event:Event) : void
        {
            var arr:Array;
            var t:TextField;
            var e:* = event;
            e.target.removeEventListener(IOErrorEvent.IO_ERROR, this.onTitleIoErr);
            e.target.removeEventListener(Event.COMPLETE, this.onTitleDataLoaded);
            var ba:* = new ByteArray();
            ba.writeBytes(e.target.data);
            ba.position = 0;
            var str:* = ba.readMultiByte(ba.length, "gbk");
            str = this._dataTool.fixJsonStr(str);
            try
            {
                arr = Json.decode(str);
            }
            catch (err:Error)
            {
                if (++_titleRetryTime < 3)
                {
                    loadTitleData();
                }
                return;
            }
            if (!arr || arr.length == 0)
            {
                arr;
            }
            var len:* = arr.length;
            this._titleArr = [];
            var i:uint;
            while (i < len)
            {
                
                t = this.newT("<a href=\'" + this._cfg.getStatUrl(arr[i][1]) + "\' target=\'_blank\'>" + arr[i][0] + "</a>", this._TITLE_W);
                this._titleArr[this._titleArr.length] = t;
                i = (i + 1);
            }
            this.aniTitle();
            return;
        }// end function

        private function aniTitle() : void
        {
            var cloneT:TextField;
            var t:* = this._titleArr.shift();
            this._titleArr.push(t);
            cloneT = this.cloneTextField(t, this._TITLE_W);
            cloneT.y = -cloneT.height;
            this._foreContainer.addChild(cloneT);
            TweenNano.to(cloneT, 1, {y:0});
            setTimeout(function () : void
            {
                TweenNano.to(cloneT, 1, {y:cloneT.height, onComplete:function () : void
                {
                    _foreContainer.removeChild(cloneT);
                    return;
                }// end function
                });
                aniTitle();
                return;
            }// end function
            , this._TITLE_SPEED);
            return;
        }// end function

        private function cloneTextField(param1:TextField, param2:uint = 0) : TextField
        {
            var _loc_3:* = this.newT(param1.htmlText, param2);
            return _loc_3;
        }// end function

        private function initMarqueeNewsMask() : void
        {
            if (!this._marqueeNewsMask)
            {
                this._marqueeNewsMask = new Shape();
                this._marqueeLayer.mask = this._marqueeNewsMask;
                this._newsContainer.addChild(this._marqueeNewsMask);
            }
            this._marqueeNewsMask.graphics.clear();
            this._marqueeNewsMask.graphics.beginFill(0);
            this._marqueeNewsMask.graphics.drawRect(0, 0, this._cfg.viewW - this._newsContainer.x, 20);
            this._marqueeNewsMask.graphics.endFill();
            return;
        }// end function

    }
}
