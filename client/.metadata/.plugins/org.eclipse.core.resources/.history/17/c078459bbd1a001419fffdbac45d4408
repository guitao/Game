package com.sina.finance.ui
{
    import com.sina.finance.data.*;

    public class OverTLine extends LinesPad
    {
        private var _lineArr:Array;
        private var _overTDArr:Array;

        public function OverTLine(param1:Array)
        {
            this._overTDArr = param1;
            this._lineArr = [];
            var _loc_2:uint = 0;
            var _loc_3:* = param1.length;
            while (_loc_2 < _loc_3)
            {
                
                this._lineArr[this._lineArr.length] = new LineCurve(1, _cfg.OVER_LINE_COLOR_ARR[_loc_2], 1, false);
                addChild(this._lineArr[_loc_2]);
                _loc_2 = _loc_2 + 1;
            }
            return;
        }// end function

        override public function draw(param1:uint = 5) : void
        {
            var _loc_2:uint = 0;
            var _loc_3:TDataBase = null;
            var _loc_4:Array = null;
            var _loc_5:Array = null;
            var _loc_6:LineCurve = null;
            var _loc_9:Number = NaN;
            var _loc_10:Number = NaN;
            var _loc_11:uint = 0;
            var _loc_12:uint = 0;
            while (this._lineArr.length < this._overTDArr.length)
            {
                
                _loc_2 = this._lineArr.length;
                this._lineArr[_loc_2] = new LineCurve(1, _cfg.OVER_LINE_COLOR_ARR[_loc_2], 1, false);
                addChild(this._lineArr[_loc_2]);
            }
            while (this._lineArr.length > this._overTDArr.length)
            {
                
                _loc_2 = this._lineArr.length;
                if (this.contains(this._lineArr[(_loc_2 - 1)]))
                {
                    this.removeChild(this._lineArr[(_loc_2 - 1)]);
                }
                this._lineArr.pop();
            }
            var _loc_7:uint = 0;
            var _loc_8:* = this._overTDArr.length;
            while (_loc_7 < _loc_8)
            {
                
                _loc_3 = TDataBase(this._overTDArr[_loc_7]);
                if (!_loc_3.tdataObj)
                {
                }
                else
                {
                    _loc_5 = _loc_3.tdataObj.poses;
                    if (!_loc_5)
                    {
                    }
                    else
                    {
                        _loc_4 = _loc_3.tdataObj.datas;
                        _loc_6 = this._lineArr[_loc_7];
                        _loc_6.clear(true);
                        _loc_9 = _cfg.TW / _loc_4.length;
                        _loc_10 = _loc_9 * 0.5;
                        _loc_11 = 0;
                        _loc_12 = _loc_3.tdataObj.realLen;
                        while (_loc_11 <= _loc_12)
                        {
                            
                            if (_loc_11 == 0)
                            {
                                _loc_6.moveTo(_loc_10, _loc_5[_loc_11].percent);
                            }
                            else
                            {
                                _loc_6.lineTo(_loc_10, _loc_5[_loc_11].percent);
                            }
                            _loc_10 = _loc_10 + _loc_9;
                            _loc_11 = _loc_11 + 1;
                        }
                    }
                }
                _loc_7 = _loc_7 + 1;
            }
            return;
        }// end function

    }
}
