package com.sina.finance.ui
{

    public class IndicatorRSI extends Indicator
    {
        private var _rsi2s:Array;
        private const CRSI1:uint = 255;
        private const CRSI2:uint = 16711935;
        private const ERSI1:uint = 6;
        private const ERSI2:uint = 12;
        private const ERSI3:uint = 24;
        private var _min:Number;
        private const CRSI3:uint = 65535;
        private var _rsi2Line:LineCurve;
        private var _max:Number;
        private var _rsi3s:Array;
        private var _rsi1s:Array;
        private var _rsi3Line:LineCurve;
        private var _rsi1Line:LineCurve;
        private var _madatas:Array;

        public function IndicatorRSI()
        {
            _color1 = this.CRSI1;
            _color2 = this.CRSI2;
            _color3 = this.CRSI3;
            this._rsi1Line = new LineCurve(1, this.CRSI1, 1, false);
            this._rsi2Line = new LineCurve(1, this.CRSI2, 1, false);
            this._rsi3Line = new LineCurve(1, this.CRSI3, 1, false);
            addChild(this._rsi1Line);
            addChild(this._rsi2Line);
            addChild(this._rsi3Line);
            return;
        }// end function

        override public function draw(param1:uint = 24) : void
        {
            this._rsi1Line.clear(true);
            this._rsi2Line.clear(true);
            this._rsi3Line.clear(true);
            var _loc_2:* = _objs.length;
            var _loc_3:* = _cfg.KW / _loc_2;
            if (_loc_2 < _cfg.NK)
            {
                _loc_3 = _cfg.KW / _cfg.NK;
            }
            var _loc_4:* = _loc_3 / 2;
            var _loc_5:* = _cfg.hindicator * this._max / (this._max - this._min);
            var _loc_6:uint = 0;
            while (_loc_6 < _loc_2)
            {
                
                if (_loc_6 == 0)
                {
                    this._rsi1Line.moveTo(_loc_4, _objs[_loc_6].rsi1y);
                    this._rsi2Line.moveTo(_loc_4, _objs[_loc_6].rsi2y);
                    this._rsi3Line.moveTo(_loc_4, _objs[_loc_6].rsi3y);
                }
                else
                {
                    this._rsi1Line.lineTo(_loc_4, _objs[_loc_6].rsi1y);
                    this._rsi2Line.lineTo(_loc_4, _objs[_loc_6].rsi2y);
                    this._rsi3Line.lineTo(_loc_4, _objs[_loc_6].rsi3y);
                }
                _loc_4 = _loc_4 + _loc_3;
                _loc_6 = _loc_6 + 1;
            }
            return;
        }// end function

        override public function initDatasBySource(param1:Array) : void
        {
            destroyArray(this._rsi1s);
            destroyArray(this._rsi2s);
            destroyArray(this._rsi3s);
            destroyArray(_objs);
            this._rsi1s = [];
            this._madatas = [];
            this._rsi2s = [];
            this._rsi3s = [];
            _objs = [];
            this.setMaDatas(param1);
            var _loc_2:* = param1.length;
            var _loc_3:* = this._madatas[0];
            var _loc_4:uint = 0;
            while (_loc_4 < _loc_2)
            {
                
                _loc_3 = this._madatas[_loc_4];
                if (_loc_3.ma4 > 0)
                {
                    this._rsi1s.push(_loc_3.ma1 / _loc_3.ma4 * 100);
                }
                else
                {
                    this._rsi1s.push(this._rsi1s[(_loc_4 - 1)]);
                }
                if (_loc_3.ma5 > 0)
                {
                    this._rsi2s.push(_loc_3.ma2 / _loc_3.ma5 * 100);
                }
                else
                {
                    this._rsi2s.push(this._rsi2s[(_loc_4 - 1)]);
                }
                if (_loc_3.ma6 > 0)
                {
                    this._rsi3s.push(_loc_3.ma3 / _loc_3.ma6 * 100);
                }
                else
                {
                    this._rsi3s.push(this._rsi3s[(_loc_4 - 1)]);
                }
                _loc_4 = _loc_4 + 1;
            }
            return;
        }// end function

        override public function interactiveEnd() : void
        {
            this._rsi1Line.interactiveEnd();
            this._rsi2Line.interactiveEnd();
            this._rsi3Line.interactiveEnd();
            return;
        }// end function

        override public function setDefaultText() : void
        {
            var _loc_1:* = _objs.length - 1;
            setTitleText("RSI6: " + Number(_objs[_loc_1].rsi1).toFixed(2), "RSI12: " + Number(_objs[_loc_1].rsi2).toFixed(2), "RSI24: " + Number(_objs[_loc_1].rsi3).toFixed(2));
            return;
        }// end function

        private function setMaDatas(param1:Array) : void
        {
            var _loc_3:Number = NaN;
            var _loc_4:Number = NaN;
            var _loc_5:Number = NaN;
            var _loc_6:Number = NaN;
            var _loc_7:Number = NaN;
            var _loc_8:Number = NaN;
            var _loc_9:Number = NaN;
            var _loc_10:Number = NaN;
            var _loc_11:Number = NaN;
            var _loc_12:Array = null;
            var _loc_13:Array = null;
            var _loc_16:Object = null;
            var _loc_2:* = param1.length;
            var _loc_14:* = param1[0];
            if (isNaN(_loc_14.prevclose) || _loc_14.prevlose < 0)
            {
                var _loc_17:* = _loc_14.close * 0.1;
                _loc_11 = _loc_14.close * 0.1;
                var _loc_17:* = _loc_17;
                _loc_10 = _loc_17;
                var _loc_17:* = _loc_17;
                _loc_8 = _loc_17;
                var _loc_17:* = _loc_17;
                _loc_7 = _loc_17;
                var _loc_17:* = _loc_17;
                _loc_6 = _loc_17;
                var _loc_17:* = _loc_17;
                _loc_5 = _loc_17;
                var _loc_17:* = _loc_17;
                _loc_4 = _loc_17;
                _loc_3 = _loc_17;
            }
            else
            {
                _loc_9 = _loc_14.close - _loc_14.prevclose;
                var _loc_17:* = Math.max(_loc_9, 0);
                _loc_10 = Math.max(_loc_9, 0);
                var _loc_17:* = _loc_17;
                _loc_5 = _loc_17;
                var _loc_17:* = _loc_17;
                _loc_4 = _loc_17;
                _loc_3 = _loc_17;
                var _loc_17:* = Math.abs(_loc_9);
                _loc_11 = Math.abs(_loc_9);
                var _loc_17:* = _loc_17;
                _loc_8 = _loc_17;
                var _loc_17:* = _loc_17;
                _loc_7 = _loc_17;
                _loc_6 = _loc_17;
            }
            _loc_12 = [_loc_10];
            _loc_13 = [_loc_11];
            this._madatas.push({ma1:_loc_10, ma2:_loc_10, ma3:_loc_10, ma4:_loc_11, ma5:_loc_11, ma6:_loc_11});
            if (_loc_2 == 1)
            {
                return;
            }
            var _loc_15:uint = 1;
            while (_loc_15 < _loc_2)
            {
                
                _loc_9 = param1[_loc_15].close - param1[(_loc_15 - 1)].close;
                _loc_10 = Math.max(_loc_9, 0);
                _loc_11 = Math.abs(_loc_9);
                _loc_12.push(_loc_10);
                _loc_13.push(_loc_11);
                _loc_16 = {};
                _loc_3 = _loc_3 + _loc_10;
                if (_loc_15 >= this.ERSI1)
                {
                    _loc_3 = _loc_10 + this._madatas[(_loc_15 - 1)].ma1 * (this.ERSI1 - 1);
                    _loc_16.ma1 = _loc_3 / this.ERSI1;
                }
                else
                {
                    _loc_16.ma1 = _loc_3 / (_loc_15 + 1);
                }
                _loc_4 = _loc_4 + _loc_10;
                if (_loc_15 >= this.ERSI2)
                {
                    _loc_4 = _loc_10 + this._madatas[(_loc_15 - 1)].ma2 * (this.ERSI2 - 1);
                    _loc_16.ma2 = _loc_4 / this.ERSI2;
                }
                else
                {
                    _loc_16.ma2 = _loc_4 / (_loc_15 + 1);
                }
                _loc_5 = _loc_5 + _loc_10;
                if (_loc_15 >= this.ERSI3)
                {
                    _loc_5 = _loc_10 + this._madatas[(_loc_15 - 1)].ma3 * (this.ERSI3 - 1);
                    _loc_16.ma3 = _loc_5 / this.ERSI3;
                }
                else
                {
                    _loc_16.ma3 = _loc_5 / (_loc_15 + 1);
                }
                _loc_6 = _loc_6 + _loc_11;
                if (_loc_15 >= this.ERSI1)
                {
                    _loc_6 = _loc_11 + this._madatas[(_loc_15 - 1)].ma4 * (this.ERSI1 - 1);
                    _loc_16.ma4 = _loc_6 / this.ERSI1;
                }
                else
                {
                    _loc_16.ma4 = _loc_6 / (_loc_15 + 1);
                }
                _loc_7 = _loc_7 + _loc_11;
                if (_loc_15 >= this.ERSI2)
                {
                    _loc_7 = _loc_11 + this._madatas[(_loc_15 - 1)].ma5 * (this.ERSI2 - 1);
                    _loc_16.ma5 = _loc_7 / this.ERSI2;
                }
                else
                {
                    _loc_16.ma5 = _loc_7 / (_loc_15 + 1);
                }
                _loc_8 = _loc_8 + _loc_11;
                if (_loc_15 >= this.ERSI3)
                {
                    _loc_8 = _loc_11 + this._madatas[(_loc_15 - 1)].ma6 * (this.ERSI3 - 1);
                    _loc_16.ma6 = _loc_8 / this.ERSI3;
                }
                else
                {
                    _loc_16.ma6 = _loc_8 / (_loc_15 + 1);
                }
                this._madatas.push(_loc_16);
                _loc_15 = _loc_15 + 1;
            }
            return;
        }// end function

        override public function interactiveTo(param1:uint) : void
        {
            this._rsi1Line.interactiveTo(param1);
            this._rsi2Line.interactiveTo(param1);
            this._rsi3Line.interactiveTo(param1);
            if (param1 >= _objs.length)
            {
                param1 = _objs.length - 1;
            }
            setTitleText("RSI6: " + Number(_objs[param1].rsi1).toFixed(2), "RSI12: " + Number(_objs[param1].rsi2).toFixed(2), "RSI24: " + Number(_objs[param1].rsi3).toFixed(2));
            return;
        }// end function

        override public function calcObjs(param1:uint, param2:uint) : void
        {
            var _loc_4:Number = NaN;
            var _loc_5:Number = NaN;
            var _loc_9:Object = null;
            var _loc_3:* = param2 - param1;
            while (_objs.length > _loc_3)
            {
                
                _objs.pop();
            }
            while (_objs.length < _loc_3)
            {
                
                _objs.push({});
            }
            this._max = -10000000;
            this._min = 10000000;
            var _loc_6:* = param1;
            while (_loc_6 < param2)
            {
                
                _loc_9 = _objs[_loc_6 - param1];
                _loc_9.rsi1 = this._rsi1s[_loc_6];
                _loc_9.rsi2 = this._rsi2s[_loc_6];
                _loc_9.rsi3 = this._rsi3s[_loc_6];
                _loc_4 = Math.min(_loc_9.rsi1, _loc_9.rsi2, _loc_9.rsi3);
                _loc_5 = Math.max(_loc_9.rsi1, _loc_9.rsi2, _loc_9.rsi3);
                if (this._min > _loc_4)
                {
                    this._min = _loc_4;
                }
                if (this._max < _loc_5)
                {
                    this._max = _loc_5;
                }
                _loc_6 = _loc_6 + 1;
            }
            var _loc_7:* = this._max - this._min;
            var _loc_8:* = _cfg.hindicator - 10;
            _loc_6 = 0;
            while (_loc_6 < _loc_3)
            {
                
                _objs[_loc_6].rsi1y = _loc_8 * (this._max - _objs[_loc_6].rsi1) / _loc_7;
                _objs[_loc_6].rsi2y = _loc_8 * (this._max - _objs[_loc_6].rsi2) / _loc_7;
                _objs[_loc_6].rsi3y = _loc_8 * (this._max - _objs[_loc_6].rsi3) / _loc_7;
                _loc_6 = _loc_6 + 1;
            }
            setLeftText(this._min, this._max, 3, 2);
            return;
        }// end function

    }
}
