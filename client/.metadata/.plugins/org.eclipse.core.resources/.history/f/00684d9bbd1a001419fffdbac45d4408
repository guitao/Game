package com.ui
{
    import flash.display.*;
    import flash.events.*;
    import flash.text.*;

    public class LabelBtnPanel extends Sprite
    {
        private var _menuArr:Array;
        private var _callBack:Function;
        private const _BTN_WH:uint = 20;
        private const _W:uint = 280;
        private var _selectedT:TextField;
        private var _cfg:Config;
        private var _lbFormet:TextFormat;
        private var _lbContainer:Sprite;
        private var _selectedItem:Sprite;
        private var _overShape:Shape;
        private var _defaultId:int = 0;
        private const _SELECTED_BOX_W:uint = 60;

        public function LabelBtnPanel(param1:Array, param2:Function)
        {
            this._cfg = Config.getInstance();
            this._lbFormet = new TextFormat("arial", 12, this._cfg.LB_COLOR);
            this._menuArr = param1;
            this._callBack = param2;
            if (stage)
            {
                this.init(null);
            }
            else
            {
                addEventListener(Event.ADDED_TO_STAGE, this.init);
            }
            return;
        }// end function

        private function clkSelectedLb(event:MouseEvent) : void
        {
            stage.removeEventListener(MouseEvent.CLICK, this.anyClk);
            this._lbContainer.visible = !this._lbContainer.visible;
            if (this._lbContainer.visible)
            {
                stage.addEventListener(MouseEvent.CLICK, this.anyClk);
                addChild(this._lbContainer);
            }
            return;
        }// end function

        private function newTxtBtn(param1:String) : Sprite
        {
            var _loc_2:* = this.newTxtfield(param1);
            var _loc_3:* = new Sprite();
            _loc_3.buttonMode = true;
            _loc_3.addChild(_loc_2);
            return _loc_3;
        }// end function

        private function init(event:Event) : void
        {
            var _loc_2:Sprite = null;
            removeEventListener(Event.ADDED_TO_STAGE, this.init);
            this.initSelectedLabel();
            this.initLbContainer();
            var _loc_3:* = this._menuArr.length;
            var _loc_4:int = 5;
            var _loc_5:int = 5;
            var _loc_6:int = 0;
            while (_loc_6 < _loc_3)
            {
                
                if (!this._selectedT && this._menuArr[_loc_6].id == this._defaultId)
                {
                    this._selectedT = this.newTxtfield(this._menuArr[_loc_6].label);
                    this._selectedItem.addChild(this._selectedT);
                }
                _loc_2 = this.newTxtBtn(this._menuArr[_loc_6].label);
                _loc_2.name = this._menuArr[_loc_6].id;
                _loc_2.addEventListener(MouseEvent.CLICK, this.clkLb);
                _loc_2.addEventListener(MouseEvent.MOUSE_OVER, this.overLbBtn);
                if (_loc_6 == 3 || _loc_6 == 6)
                {
                    _loc_5 = 5;
                    _loc_4 = _loc_4 + 25;
                }
                _loc_2.x = _loc_5;
                _loc_2.y = _loc_4;
                _loc_5 = _loc_5 + 70;
                this._lbContainer.addChild(_loc_2);
                _loc_6++;
            }
            this.refreshLbContainerBg();
            return;
        }// end function

        private function newTxtfield(param1:String) : TextField
        {
            var _loc_2:* = new TextField();
            _loc_2.defaultTextFormat = this._lbFormet;
            _loc_2.text = param1;
            _loc_2.autoSize = "left";
            _loc_2.mouseEnabled = false;
            return _loc_2;
        }// end function

        private function overLbBtn(event:MouseEvent) : void
        {
            this.clearAllOverShape();
            var _loc_2:* = Sprite(event.currentTarget);
            _loc_2.graphics.clear();
            _loc_2.graphics.beginFill(this._cfg.BG_COLOR);
            _loc_2.graphics.drawRect(-3, -2, _loc_2.width + 6, this._BTN_WH + 4);
            _loc_2.graphics.endFill();
            return;
        }// end function

        private function refreshSelectedBox() : void
        {
            this._selectedItem.graphics.clear();
            this._selectedItem.graphics.lineStyle(0, 12764353);
            this._selectedItem.graphics.beginFill(16777215);
            this._selectedItem.graphics.drawRect(0, 0, this._SELECTED_BOX_W, this._BTN_WH);
            this._selectedItem.graphics.drawRect(this._SELECTED_BOX_W, 0, this._BTN_WH, this._BTN_WH);
            var _loc_1:int = 5;
            var _loc_2:int = 8;
            var _loc_3:uint = 11;
            this._selectedItem.graphics.beginFill(3315685);
            this._selectedItem.graphics.moveTo(this._SELECTED_BOX_W + _loc_1, _loc_2);
            this._selectedItem.graphics.lineTo(this._SELECTED_BOX_W + _loc_1 + _loc_3, _loc_2);
            this._selectedItem.graphics.lineTo(this._SELECTED_BOX_W + _loc_1 + _loc_3 * 0.5, _loc_2 + _loc_3 - 4);
            this._selectedItem.graphics.lineTo(this._SELECTED_BOX_W + _loc_1, _loc_2);
            this._selectedItem.graphics.endFill();
            return;
        }// end function

        private function anyClk(event:MouseEvent) : void
        {
            if (this._lbContainer.visible && !this._lbContainer.hitTestPoint(event.stageX, event.stageY) && !this._selectedItem.hitTestPoint(event.stageX, event.stageY))
            {
                this.clkSelectedLb(null);
            }
            return;
        }// end function

        public function selecteDefault(param1:int) : void
        {
            this._defaultId = param1;
            var _loc_2:* = this._menuArr.length;
            var _loc_3:int = 0;
            while (_loc_3 < _loc_2)
            {
                
                if (this._menuArr[_loc_3].id == param1)
                {
                    if (!this._selectedT)
                    {
                        this._selectedT = this.newTxtfield(this._menuArr[_loc_3].label);
                        this._selectedItem.addChild(this._selectedT);
                    }
                    else
                    {
                        this._selectedT.text = this._menuArr[_loc_3].label;
                    }
                    break;
                }
                _loc_3++;
            }
            this.refreshSelectedBox();
            return;
        }// end function

        private function initSelectedLabel() : void
        {
            this._selectedItem = new Sprite();
            this._selectedItem.addEventListener(MouseEvent.CLICK, this.clkSelectedLb);
            this._selectedItem.buttonMode = true;
            addChild(this._selectedItem);
            return;
        }// end function

        private function refreshLbContainerBg() : void
        {
            this._lbContainer.graphics.clear();
            this._lbContainer.graphics.lineStyle(0, 12436431);
            this._lbContainer.graphics.beginFill(16777215);
            this._lbContainer.graphics.drawRect(0, 0, this._W, 80);
            this._lbContainer.graphics.endFill();
            return;
        }// end function

        private function clkLb(event:MouseEvent) : void
        {
            var _loc_2:* = Sprite(event.currentTarget);
            var _loc_3:* = int(_loc_2.name);
            this.selecteDefault(_loc_3);
            this.clkSelectedLb(null);
            this._callBack(_loc_3);
            return;
        }// end function

        private function clearAllOverShape() : void
        {
            var _loc_3:Sprite = null;
            var _loc_1:* = this._lbContainer.numChildren;
            var _loc_2:int = 0;
            while (_loc_2 < _loc_1)
            {
                
                _loc_3 = Sprite(this._lbContainer.getChildAt(_loc_2));
                _loc_3.graphics.clear();
                _loc_2++;
            }
            return;
        }// end function

        private function initLbContainer() : void
        {
            this._lbContainer = new Sprite();
            this._lbContainer.visible = false;
            this._lbContainer.x = -this._W + this._SELECTED_BOX_W + this._BTN_WH;
            this._lbContainer.y = this._BTN_WH;
            return;
        }// end function

    }
}
