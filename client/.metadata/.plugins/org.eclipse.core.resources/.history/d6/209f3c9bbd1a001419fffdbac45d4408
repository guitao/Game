package com.sina.finance.ui
{
    import flash.display.*;
    import flash.text.*;

    public class Indicator extends LinesPad
    {
        private var _leftContainer:Sprite;
        protected var _color1:uint = 255;
        protected var _color2:uint = 16711935;
        protected var _color3:uint = 65535;
        private var _titleTexts:Array;
        private var _leftTexts:Array;
        private var _titleContainer:Sprite;
        private var _titleInited:Boolean;
        protected var _objs:Array;

        public function Indicator()
        {
            this._titleTexts = [];
            this._leftTexts = [];
            this._titleContainer = new Sprite();
            var _loc_1:Boolean = false;
            this._titleContainer.mouseChildren = false;
            this._titleContainer.mouseEnabled = _loc_1;
            this._titleContainer.y = -10;
            addChild(this._titleContainer);
            this._leftContainer = new Sprite();
            var _loc_1:Boolean = false;
            this._leftContainer.mouseChildren = false;
            this._leftContainer.mouseEnabled = _loc_1;
            this.resize();
            addChild(this._leftContainer);
            return;
        }// end function

        public function initDatasBySource(param1:Array) : void
        {
            return;
        }// end function

        public function setDefaultText() : void
        {
            return;
        }// end function

        public function calcObjs(param1:uint, param2:uint) : void
        {
            return;
        }// end function

        public function setLeftText(param1:Number, param2:Number, param3:uint = 3, param4:uint = 2) : void
        {
            var _loc_6:TextField = null;
            var _loc_7:uint = 0;
            var _loc_8:Number = NaN;
            var _loc_9:TextField = null;
            var _loc_10:String = null;
            while (this._leftContainer.numChildren < param3)
            {
                
                _loc_6 = this.getTextField(_cfg.clinePrice, 0, 10, "right");
                this._leftContainer.addChild(_loc_6);
                this._leftTexts[this._leftTexts.length] = _loc_6;
            }
            while (this._leftContainer.numChildren > param3)
            {
                
                _loc_7 = this._leftContainer.numChildren - 1;
                this._leftContainer.removeChildAt(_loc_7);
                delete this._leftTexts[_loc_7];
                this._leftTexts.pop();
            }
            var _loc_5:int = 0;
            while (_loc_5 < param3)
            {
                
                _loc_8 = param2 - _loc_5 * (param2 - param1) / (param3 - 1);
                _loc_9 = this._leftTexts[_loc_5];
                _loc_10 = _loc_8.toFixed(param4);
                if (param2 > 100000000 || param1 < -100000000)
                {
                    _loc_10 = (_loc_8 / 100000000).toFixed(2);
                    if (_loc_5 == (param3 - 1))
                    {
                        _loc_10 = "x亿";
                    }
                }
                else if (param2 > 10000 || param2 < -10000)
                {
                    _loc_10 = (_loc_8 / 10000).toFixed(2);
                    if (_loc_5 == (param3 - 1))
                    {
                        _loc_10 = "x万";
                    }
                }
                else if (_loc_8 < 0.001 && _loc_8 > -0.001)
                {
                    _loc_10 = Number(0).toFixed(param4);
                }
                _loc_9.text = _loc_10;
                _loc_9.x = _cfg.posX - _loc_9.width;
                _loc_9.y = _loc_5 * (_cfg.hindicator - 10) / (param3 - 1);
                _loc_9.y = _loc_9.y - _loc_9.height / 2;
                _loc_5++;
            }
            return;
        }// end function

        public function setTitleText(param1:String, param2:String, param3:String) : void
        {
            var _loc_4:Number = NaN;
            if (!this._titleInited)
            {
                this._titleTexts = [this.getTextField(this._color1, 0, 10, "left"), this.getTextField(this._color2, 0, 10, "left"), this.getTextField(this._color3, 0, 10, "left")];
                this._titleContainer.addChild(this._titleTexts[0]);
                this._titleContainer.addChild(this._titleTexts[1]);
                this._titleContainer.addChild(this._titleTexts[2]);
                _loc_4 = -2;
                this._titleTexts[0].x = 3;
                this._titleTexts[0].y = _loc_4;
                this._titleTexts[1].y = _loc_4;
                this._titleTexts[2].y = _loc_4;
                this._titleInited = true;
            }
            if (!contains(this._titleContainer))
            {
                addChild(this._titleContainer);
            }
            this._titleTexts[0].text = param1;
            this._titleTexts[1].text = param2;
            this._titleTexts[2].text = param3;
            this._titleTexts[1].x = _cfg.TW / 2 - this._titleTexts[1].width / 2;
            this._titleTexts[2].x = _cfg.TW - this._titleTexts[2].width;
            return;
        }// end function

        private function getTextField(param1:uint = 0, param2:uint = 0, param3:uint = 10, param4:String = "left") : TextField
        {
            var _loc_5:* = new TextField();
            new TextField().selectable = false;
            _loc_5.autoSize = param4;
            if (param2 > 0)
            {
                _loc_5.background = true;
                _loc_5.backgroundColor = param2;
            }
            else
            {
                _loc_5.background = false;
            }
            var _loc_6:* = new TextFormat("Arial", param3, param1);
            _loc_5.defaultTextFormat = _loc_6;
            return _loc_5;
        }// end function

        override public function resize() : void
        {
            this._leftContainer.x = -_cfg.posX;
            return;
        }// end function

        protected function destroyArray(param1:Array) : void
        {
            if (!param1)
            {
                return;
            }
            var _loc_2:* = param1.length;
            var _loc_3:uint = 0;
            while (_loc_3 < _loc_2)
            {
                
                delete param1[_loc_3];
                _loc_3 = _loc_3 + 1;
            }
            while (param1.length > 0)
            {
                
                param1.pop();
            }
            return;
        }// end function

    }
}
