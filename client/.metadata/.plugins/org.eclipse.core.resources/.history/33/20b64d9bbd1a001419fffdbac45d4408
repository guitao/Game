package com.ui
{
    import flash.display.*;
    import flash.events.*;
    import flash.filters.*;
    import flash.text.*;
    import flash.utils.*;

    public class Loading extends Sprite
    {
        private var _spin:Shape;
        private const ALPHA_SPEED:Number = 0.024;
        private const ROTATION_SPEED:Number = 24;
        private var _t:TextField;

        public function Loading(param1:String = "正在读取数据……")
        {
            var _loc_5:Number = NaN;
            var _loc_6:Number = NaN;
            var _loc_7:Number = NaN;
            var _loc_8:Number = NaN;
            this._t = new TextField();
            this._t.defaultTextFormat = new TextFormat("arial", 12, 0);
            this._t.text = param1;
            this._t.autoSize = "left";
            this._t.selectable = false;
            var _loc_11:int = 5;
            this._t.y = 5;
            this._t.x = _loc_11;
            addChild(this._t);
            graphics.lineStyle(2, 8421504);
            graphics.beginFill(15790320);
            graphics.drawRoundRect(0, 0, this._t.width + 10, this._t.height + 10, 5, 5);
            this._spin = new Shape();
            this._spin.x = this._t.width + 40;
            this._spin.y = (this._t.height + 10) / 2;
            addEventListener(Event.ENTER_FRAME, this.onEnter);
            var _loc_2:uint = 15;
            var _loc_3:Array = [15790320, 13684944, 11579568, 9474192, 7368816, 5263440];
            var _loc_4:* = _loc_3.length;
            var _loc_9:uint = 0;
            while (_loc_9 < _loc_4)
            {
                
                _loc_5 = 360 / _loc_4 * _loc_9;
                _loc_6 = _loc_5 * (Math.PI / 180);
                _loc_7 = _loc_2 * Math.cos(_loc_6);
                _loc_8 = _loc_2 * Math.sin(_loc_6);
                this._spin.graphics.beginFill(_loc_3[_loc_9]);
                this._spin.graphics.drawCircle(_loc_7, _loc_8, 4);
                _loc_9 = _loc_9 + 1;
            }
            addChild(this._spin);
            var _loc_10:* = new DropShadowFilter();
            new DropShadowFilter().alpha = 0.5;
            filters = [_loc_10];
            return;
        }// end function

        private function offFin(event:TimerEvent) : void
        {
            event.target.removeEventListener(TimerEvent.TIMER, this.offHandler);
            event.target.removeEventListener(TimerEvent.TIMER_COMPLETE, this.offFin);
            this.alpha = 0;
            this.visible = false;
            removeEventListener(Event.ENTER_FRAME, this.onEnter);
            return;
        }// end function

        public function showOff(param1:Number = 50, param2:Number = 9) : void
        {
            var _loc_3:Timer = null;
            if (!this.isShowing)
            {
                return;
            }
            this.alpha = 0.9;
            if (param1 < 10)
            {
                this.alpha = 0;
                removeEventListener(Event.ENTER_FRAME, this.onEnter);
            }
            else
            {
                _loc_3 = new Timer(param1, param2);
                _loc_3.addEventListener(TimerEvent.TIMER, this.offHandler);
                _loc_3.addEventListener(TimerEvent.TIMER_COMPLETE, this.offFin);
                _loc_3.start();
            }
            return;
        }// end function

        private function onEnter(event:Event) : void
        {
            this._spin.rotation = this._spin.rotation + this.ROTATION_SPEED;
            return;
        }// end function

        public function get isShowing() : Boolean
        {
            return this.alpha >= 1;
        }// end function

        public function showOn() : void
        {
            this.visible = true;
            addEventListener(Event.ENTER_FRAME, this.onEnter);
            this.alpha = 1;
            return;
        }// end function

        private function offHandler(event:TimerEvent) : void
        {
            var _loc_2:* = Timer(event.target);
            this.alpha = this.alpha - this.ALPHA_SPEED * (_loc_2.repeatCount - _loc_2.currentCount);
            return;
        }// end function

    }
}
